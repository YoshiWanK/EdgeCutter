# Assignment 6 reflection

## Submitter metadata

Partner 1: Firstname Lastname (NetID)  - Yash Chatha (yc2727)
Partner 2: Firstname Lastname (NetID)  - Nick Spoto (njs232)

Hours spent working on this assignment: 10.0 - 13.5

## Verification questions

1. Approximately how much faster does your app finish processing the clocktower
   image when using your `HeapMinQueue` vs. the `RefMinQueue`?  (with assertions
   disabled)

   Answer: The Selection App had an average processing time of around 2 seconds 58 milliseconds
   when processing with RefMinQueue. It had an average processing time of around 30 milliseconds with
   MinHeapQueue and assertions disabled, netting a 2 second and 28 millisecond faster processing time.

## Reflection questions

1. When completing A5, did you make any assumptions specific to point-to-point
   selections that you had to relax or fix in order to work with A6's new
   selection model?  What do you think would be a good technique to help
   developers avoid assuming things beyond what's specified in an interface?

   Answer: Yes, an assumption we made for A5 that had to be relaxed was that in paintControlPoint,
   we assumed that we could simply add a control point for every vertex of the line since we were only
   dealing with one line segment per click. However, In A6, we were dealing with a much greater number of
   segments per additional click due to the fitting of the segments for edge tracing, so we had to only add
   control points at the end of the live wire once clicked instead of at every vertex along a new path.

2. Describe your custom weigher(s) and what inspired you to do the calculations
   that you did.

   Answer: Our custom weigher copies the colored image instead of the gray scale image in the
   ColorGradMono method. From here, our method retrieves the source vertex and its coordinates.
   We then used the edge direction to find a maximum gradient (180 if even, 255 if odd). Our method
   really differentiates from the ColorGradMono in the weigher method, where we used a loop to iterate
   through each color band, and we used CrossGrad on each iteration of this loop to find the color
   gradient of the band. We then found the weight of that band by subtracting its color gradient from
   eGradMax, calculating from the edge direction. We returned the average of all of the band's color weight
   which will be a more accurate measurement, since it distinguishes between different colors, rather than
   adding them all up.

3. What is your favorite thing you learned or accomplished in CS 2110?

   Answer: Our favorite thing we learned in CS 2110 was GUIs, and playing around with
   widgets, such as in A5 and A6. It was really rewarding to see the visual implementation of the code with
   something cool like a sticker generator, and it was also great to see how the edge tracing worked
   in A6, or being able to edit selections in A5 and interact with the control panel we built.
